initSidebarItems({"fn":[["convert_id_2_to_3","Returns the coresponding ID3v2.3/ID3v2.4 ID given the ID3v2.2 ID."],["convert_id_3_to_2","Returns the coresponding ID3v2.2 ID given the ID3v2.3/ID3v2.3 ID."],["delim_len","Returns the delimiter length for the specified encoding."],["find_delim","Returns the index of the first delimiter for the specified encoding."],["string_from_encoding","Returns a string created from the vector using the specified encoding. Returns `None` if the vector is not a valid string of the specified encoding type."],["string_from_latin1","Returns a string created from the vector using Latin1 encoding, removing any trailing null bytes. Can never return None because all sequences of u8s are valid Latin1 strings."],["string_from_utf16","Returns a string created from the vector using UTF-16 (with byte order mark) encoding. Returns `None` if the vector is not a valid UTF-16 string."],["string_from_utf16be","Returns a string created from the vector using UTF-16BE encoding. Returns `None` if the vector is not a valid UTF-16BE string."],["string_from_utf16le","Returns a string created from the vector using UTF-16LE encoding. Returns `None` if the vector is not a valid UTF-16LE string."],["string_from_utf8","Returns a string created from the vector using UTF-8 encoding, removing any trailing null bytes. Returns `None` if the vector is not a valid UTF-8 string."],["string_to_latin1","Returns a Latin1 vector representation of the string."],["string_to_utf16","Returns a UTF-16 (with native byte order) vector representation of the string."],["string_to_utf16be","Returns a UTF-16BE vector representation of the string."],["string_to_utf16le","Returns a UTF-16LE vector representation of the string."],["synchsafe","Returns the synchsafe varaiant of a `u32` value."],["unsynchsafe","Returns the unsynchsafe varaiant of a `u32` value."],["uuid","Returns a random sequence of 16 bytes, intended to be used as a UUID."]]});